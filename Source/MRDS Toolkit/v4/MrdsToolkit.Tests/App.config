<?xml version="1.0" encoding="utf-8"?>
<configuration>
  
  <appSettings>

    <!-- Maximum number of pneding outbound requests. Set this number if http requests are failing 
    <add key="Microsoft.Dss.Services.Transports.Http.MaxPendingRequests" value="5"/>
    -->

    <!-- Uncomment the port settings below to set the default ports. 
         These settings are used if the ports are not specified on the command line. -->

    <!--Http port to use if none specified on the host commandline or runtime initialization-->
    <!--<add key="Microsoft.Dss.Core.HttpPort" value="50000" />-->
    <!--Tcp port to use if none specified on the host commandline or runtime initialization-->
    <!--<add key="Microsoft.Dss.Core.TcpPort" value="50001" />-->

    <!-- Message logging path for writing log files and enabling messages capture -->
    <!-- <add key="Microsoft.Dss.Core.MessageLoggingPath" value="store\logs" /> -->
    <!-- Hostname to use for Dss node, for all transports -->
    <!--<add key="Microsoft.Dss.Core.HostName" value="ccofficehost" />-->


    <!--Assembly resource name containing resources for default pages. Empty string will default to Microsoft.Dss.Runtime.Dll-->
    <!--<add key="Microsoft.Dss.Core.DefaultRuntimeResources" value="DssBranding.dll"/>-->
    <!-- Determines local file system access. Values:
              Read - No file writes performed by Dss core
              ReadWrite - Writes enabled (cache updates allowed)
              -->
    <add key="Microsoft.Dss.Core.LocalFileAccess" value="ReadWrite"/>
    <!--Message Capture values:
            CaptureInbound
            CaptureOutbound
            CaptureInboundOutbound    
            CaptureInboundWhenDiagnosticHeaderPresent
            CaptureOutboundWhenDiagnosticHeaderPresent
            CaptureInboundOutboundWhenDiagnosticHeaderPresent
        -->
    <add key="Microsoft.Dss.Services.Forwarders.MessageCapture" value=""/>
    <!-- DsspTimeoutTracking enables/disables expiration on all DsspOperations, using DsspOperation.DefaultShortTimeout -->
    <add key="Microsoft.Dss.Services.Forwarders.DsspTimeoutTracking" value="false"/>
    <!-- DsspTimeScale determines the absolute Timeout values specified at runtime. 
             A scale of 2.0 multiplies all timespans specified by 2, effectively doubling all timeout values  -->
    <add key="Microsoft.Dss.Services.Forwarders.DsspTimeScale" value="1.0"/>
    <!-- 
        <add key="Microsoft.Dss.Services.Transports.UseBinarySerialization" value="Disabled"/>
         -->
    <!-- Comment the line below to disable security -->
    <!-- Security file is found relative to the Root directory of the running node -->
    <add key="Security" value="store\SecuritySettings.xml"/>
    <add key="ClientSettingsProvider.ServiceUri" value=""/>

    <!-- When this property is false (or absent), the node will listen only on 
         the loopback interface. This is the default behavior in RDS4.0.
         If you require the previous behavior, which listens on all interfaces, set
         this property to true. -->
    <add key="Microsoft.Dss.Services.Transports.AllowUnsecuredRemoteAccess" value="true"/>

  </appSettings>

  <!-- Logging -->
  <system.diagnostics>
    <sharedListeners>
      <add name="Event Log" type="System.Diagnostics.EventLogTraceListener" initializeData="Microsoft Robotics Service Host"/>
      <add name="System.Net" type="System.Diagnostics.TextWriterTraceListener" initializeData="DSS Host.log"/>
    </sharedListeners>
    <sources>
      <source name="Microsoft Robotics Service Host" switchValue="Information">
        <listeners>
          <add name="Event Log"/>
        </listeners>
      </source>
      <source name="System.Net">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.Sockets">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
      <source name="System.Net.Cache">
        <listeners>
          <add name="System.Net"/>
        </listeners>
      </source>
    </sources>
    <switches>
      <!-- Network tracing
            value Description  
            0 Offâ€”disables tracing
            1 Critical events are logged
            2 Errors are logged
            4 Warnings are logged
            8 Method call entry and exit is logged.
            16 Network traffic is logged. 
            -->
      <add name="System.Net.Sockets" value="4"/>
      <add name="System.Net" value="4"/>
      <add name="System.Net.Cache" value="4"/>
      <!-- DSS Trace switch values: Off 0, Error 1, Warning 2, Info 3, Verbose 4 -->
      <add name="Microsoft.Ccr.Core" value="4"/>
      <add name="Microsoft.Dss.Core" value="4"/>
      <add name="Microsoft.Dss.Services.TestBase" value="4"/>
      <add name="Microsoft.Dss.Services" value="4"/>
      <add name="Microsoft.Dss.Services.Transports" value="4"/>
      <add name="Microsoft.Dss.Services.Forwarders" value="4"/>
    </switches>
    <trace autoflush="true"/>
  </system.diagnostics>

  <!-- Network -->
  <system.net>
    <defaultProxy>
      <!-- Bypass proxy for local connections -->
      <proxy bypassonlocal="True"/>
    </defaultProxy>
  </system.net>

<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5.1"/></startup></configuration>
